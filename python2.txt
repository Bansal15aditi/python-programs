#1.enter list and find cube of elements using functions.
n=int(input("enter number"))
list1=[]
for i in range(n):
    list1.insert(i,int(input()))
print(list1)
for i in list1:
    lst=list(map(lambda i:i**3,list1))
print(lst)
#2.print common elements of both list.
list1=[]
list2=[]
n=int(input("enter total number"))
for i in range(n):
    list1.insert(i,int(input()))
for i in range(n):
    list2.insert(i,int(input()))
print(list1)
print(list2)
lst=list(filter(lambda k:k in list1,list2))
print(lst)
#3.python program to create anested dictionary.
dict={}
n=int(input("enter total number"))
for i in range(n):
  k=int(input("enter key"))
  dict[k]={}
  m=int(input("enter total"))
  for j in range(m):
    k1=int(input("enter key no."))
    v=int(input("enter value"))
    dict[k].update({k1:v})
print(dict)
#4.find maximum of three numbers
def fun(a,b,c):
    if(a>b and a>c):
        return a
    elif(b>a and b>c):
        return b
    else:
        return c
x=int(input("enter number"))
y=int(input("enter 2nd number"))
z=int(input("enter 3rd number"))
max=fun(x,y,z)
print("maximum=",max)
#5.find factorial of number using function
def fact(n):
    f=1
    while(n>0):
        f=f*n
        n=n-1
    return f
x=int(input("enter number"))
f=fact(x)
print("factorial=%d"%f)
#6. find cube of a number
def cube():
    return n**3
n=int(input("enter number"))
print(cube())
#7.create functions for add and multiply two numbers
def add(a,b):
    return a+b
def mul(x,y):
    return x*y
a=int(input())
b=int(input())
c=add(a,b)
p=mul(a,b)
print("sum=",c)
print("product=",p)
#8.create a function to check number is prime or not
def prime_check(n):
    i=2
    c=0
    while(i<=(n-1)):
        if(n%i==0):
            c=c+1
        i=i+1
    if(c==0):
        print("prime number")
    else:
        print("not prime number")
#9.find sum of list elements using function.
n=int(input("enter number"))
prime_check(n)
def myfun(*list):
    output=sum(*list)
    return output
list=[]
n=int(input("enter total numbers"))
for i in range(n):
    list.insert(i,int(input()))
print(list)
result=myfun(list)
print(result)
#10.create a file input string and search a word inputed by user in that file
file=open("aditi.txt",'w')
str=input("enter string")
file.write(str)
word=input("enter word you want find")
file=open("aditi.txt",'r')
str1=file.read()
if(word in str1):
    print("word found")
else:
    print("word not found")
file.close()
#11.create two files enter string and input word and find it.
file1=open("aditi1.txt",'w')
str1=input("enter string in first file")
file1.write(str1)
file2=open("aditi2.txt",'w')
str2=input("enter string in second file")
file2.write(str2)
word=input("enter word you want find in both string")
file1=open("aditi1.txt",'r')
st1=file1.read()
file2=open("aditi2.txt",'r')
st2=file2.read()
if(word in st1):
    if(word in st2):
        print("word found")
    else:
        print("not in second file")
else:
    print("not found")
file1.close()
file2.close()
#12.count uppercase characters in string in file.
file=open("aditi.txt",'w')
str=input("enter string")
file.write(str)
file.close()
file=open("aditi.txt",'r')
str1=file.read()
print(str1)
c=0
for i in range(len(str1)):
    if(str[i].isupper()):
        c+=1
print(c)
file.close()
#13.count even and odd numbers in list.
def count(list):
    even=0
    odd=0
    for i in list:
        if(i%2==0):
            even+=1
        else:
            odd+=1
    return even,odd
list=[]
n=int(input("enter total number"))
for i in range(n):
    list.insert(i,int(input()))
print(list)
e,o=count(list)
print(e)
print(o)
#14. program to reverse a string using function.
def revstr(str):
    return str[: :-1]
str=input("enter string")
str1=revstr(str)
print(str1)
#15.program to check a number in given range or not.
def check_range(n):
    if n in range(3,9):
        print("yes number in range")
    else:
        print("not in range")
    
n=int(input("enter number"))
check_range(n)
#16.count upper and lower characters in string using function.
def check_str(str):
    u=0
    l=0
    for i in range(len(str)):
        if(str[i].isupper()):
            u+=1
        elif(str[i].islower()):
            l+=1
    return u,l
str=input("enter string")
upper,lower=check_str(str)
print(upper)
print(lower)
#17. sum of list elements using function
def add_list(list):
    s=0
    for i in range(len(list)+1):
        s=s+i
    return s
list=[]
n=int(input("enter total numbers"))
for i in range(n):
    list.insert(i,int(input()))
print(list)
total=add_list(list)
print(total)
#18.calculate multiply of list elements using function.
def mul_list(list):
    m=1
    for i in range(1,len(list)+1):
        m=m*i
    return m
list=[]
n=int(input("enter total numbers"))
for i in range(n):
    list.insert(i,int(input()))
print(list)
product=mul_list(list)
print(product)
#19.check whether string is palindrome or not.
def check_str(str):
    str1=str[: :-1]
    if(str==str1):
        print("palindrome")
    else:
        print("not palindrome")
str=input("enter string")
check_str(str)
#20.merge two nested dictionary.
dict1={}
n=int(input("enter total number of elements"))
for i in range(n):
  k=int(input("enter key"))
  dict1[k]={}
  m=int(input("enter total number in nested"))
  for j in range(m):
    k1=int(input("enter keys"))
    v=int(input("enter values"))
    dict1[k].update({k1:v})
dict2={}
n=int(input("enter total number of elements"))
for i in range(n):
  k=int(input("enter key"))
  dict2[k]={}
  m=int(input("enter total number in nested"))
  k1=int(input("enter keys"))
  v=int(input("enter values"))
  dict2[k].update({k1:v})
print(dict1)
print(dict2)
dict1.update(dict2)
print(dict1)
